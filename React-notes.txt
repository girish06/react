Reactjs
21/04/2019
session-4
working with lists and and conditionals

Tuturiol-1
============
Rendering list and conditional content:
 To output the content conditonally and work with listing

Tuturiol-2
============ 
Rendering the content conditionally

can inject  jsvascript in jsx code using {} curly braces
conditions will get differ from javascript and vue js..  react uses in different way


Tuturiol-3
===========
Render content js way
-we can write the js condition inside the render method and we can create a variable to render in way 
 of jsx and print the element in return method..

Tuturiol-4
============
ouputing list intro:
we have list of data in existing tuturiols which we printed statically.
when we go for large applications we used to update or delete or add new data which we retrive from server.

Tuturiol-5
============
outputing the list
vanilla javascript gives the function which we can be converted into array.
// needs to work

Tuturiol-6
=============

lists and state


=============================================================================================================================================================
20/04/2019
==============
Tuturiol-11
=============================
Working with props

dyanamic content with  props
pass the props in function
we can set the dynamic content using {} inside html tag.


Tururiol-12
=============================
Understanding the childrens property
use : props.children

Note: make the proper jsx code when we want to retain children data with root div element


Tuturiol-13
============================
understanding and usging the state

state property can be when we are inheriting the component class.
state: can be in class  based react component which is a default way of adding the state.

Props are managed outside the component 
state are managed inside the component

Tuturiol-14
============================
Handling the events

onClick- jsx code we use Caps c.
its better to have  the click function name with handler suffix		

onclick function should not use function braces say like (). because on page load it will call that function which is not required
should use arrow function as it follows ES6 concepts


Tuturiol-15
============================
manuplating the state

Updating the DOM using the state
use setState

Tuturiol-16
============================
stateless vs statefull components

// needs  work

Tuturiol-17
============================

passing method reference

methods also can be passed as props

another way to send the data to the function parameter
<button onClick={() => this.clickSwitchHandler('giri...!')}>click...!</button>

Tuturiol-18
===========================
Two way binding.

event : onChange event
we have to pass the event keyword in the function



Tuturiol-19
===========================
Adding stylesheets and styling the components

while importing the css file, its required to have the dot.extension,
we can ignore only for .js file.

Tuturiol-20
===========================
understanding the inline styles

create a style variable inside the render method and assign the variable with style tag.


Tuturiol-21
==========================
Assignment

Tuturiol -22
=========================

React hooks:

state can be used only in class based components.

Inorder to use those components in functions based - we use react hooks

react hooks basicaly a collection of functions

all hooks start with use keyword
usestate hook:

it always return two elements

// Needs  to do practical work






19/04/2019
===============
session-3: indersatanding the basic features and syntax
Tuturiol-1:
==============================
 just an intro.

Tuturiol-2:
==============================
Building the workflow

To build single page and multipage application.
 why
   To optimize the code
   To use next generation javascript features
   Bable- parse our code
   to make productive

How-?
  Using dependency management tool like NPM or yarn(third party packages)
  use bundler,  recommended webpack
   -> we write lot of code with different files and folders, though we need to ship the code as bundled
   -> webpack is used to bundle the files
   -> complier (next gen javascript),  we use babel+presets
   -> development server

Tuturiol-3:
==============================

setting up the enviroment:

make sure we have nodejs, npm installed globally with the lastest version.

installations:
[1]sudo npm install -g create-react-app
   will get something like below

  /usr/local/bin/create-react-app -> /usr/local/lib/node_modules/create-react-app/index.js
  + create-react-app@2.1.8
  added 63 packages from 20 contributors in 7.78s

[2]. create-react-app <app name>
    this will create a app package 

Tuturiol-4
=============================
Understanding the folder structure.

Root files:

package.lock.json
   - its just lock the dependencies
package.json
   - contains the dependencies of the project like scripts react dom, react,react scripts.
node_modules
   - its has all the dependencies and sub dependencies of the project

public folder:
  index.html  -  basically contain the div id where we render the raeact app , and include the headers and libraries
  manifest.json - metadata about our application- progressive web app.

src: 
  development goes here..


Tuturiol-5:
============================
Understanding components basics:
-> import/export
-> react component
-> render method
-> every react component should have view.
-> In component the code which is return is not really HTML code.its an jsx which is automically complied valid js at the end.


Tuturiol-6:
============================
understanding jsx


alternative for jsx in react would be implemented by createElement function which has four params
 1. div
 2. configuration which can be null (which is used in turn as object like className property)
 3. children -  is nothing but what is nested inside the div


Tuturiol-7:
==========================
Restrictions in jsx

1 .example we should use className instead of class , since we use class like oops concept.
   but when the html renders in the broswer it will be a class when we inspect it.

2. our jsx expressions can have only one root element
   we cannot write code outside  the root element say outside the div


Tuturiol-8
===========================
 Creating the functional component
 
 created custom component and imported and exported and rendered.

Tuturiol-9
===========================
working with components

Tuturiol-10
===========================
outputting the dynamic content

=============================================================================================================================================================
session-2
Tuturiol-6:
============================== 
class methods and properties

properties are like variable 
methods are like functions attached to the classs or object

ES6
->Properties in constructor function (like using this keyword)

ES7
-> We can directly declare the variables in class
-> directly use arrow functions


==============================

spread and rest operators:

  ... three dots .

 we call it spread and rest operators depends where we use it.

spread operators:
  use to split up the array elements and object properties.
  syntax: 
     const newArr = [...oldArr,4,5];
     const newObj = {...oldObj, newob:5}

rest operators:
  used to merge the list of function argument into an array
 
syntax: // this is used to sort the array values
   function sortArgs(...args) {
      return args.sort()
   }


Tuturiol-8:
==============================

Destructuring:     	
 
Easily to extract the array elements or object properties and store them in variables.. somthing like spread operator does but not .

array destructuring 
 [a,b] = ['girish', '27']
 console.log(b); // output as 27
object destructuring
 {name} = {name:'girish', age:'27}
 console.log(name); // output girish
 console.log(age); // output as undefined



Tuturiol-9:
==============================
Reference and primitives type:

Primitives type:

Number,string, boolean are all types of primitives

Reference type:

Objects and arrays are type of reference 

objects are stored in memory,we store a pointer in the place memory
if we update the value for the object. it will update the pointer variable in the memory.

so avoid this kind of conflicts , we have to use spread operator for copying the object or arrays.


Tuturiol-10
=============================
Refreshing the array functions



Tuturial-10
=============================
overview result of the course







17/04/2019
================


session-2
========================================================================================
Tuturiol-4:
==============================
Exports and imports(modules)

javasccript code is splitted up in mulitple files
to import them in correct order in html file

main idea of these concetps to import the content of other js file.

Export js:
    by default key word
    by const

   export can hold function 
   export can hold variables


import:
   its in two different types.
   one for default type
   one for constant type

Tuturiol-5:
===============================

class concepts:

classes are nothing but blueprint for javascript objects

it has class keyword
it has properties and method.


access the properties of class as normal as oops concepts.
inheritance concepts.
super() method

constructor method: to initiate the class.







 



15/04/2019
================

session-2
========================================================================================
Tuturiol-1
==============================
Next Gen javascripts
 example like arrows, lets, constants etc
 Es6 concepts
 clean and robust app using advanced js concepts

Tuturiol-2
==============================
In js we normally create a variable with keyword var
 
Henceforth, in ES6 Concepts we use those varibles say  let and const

use let to create a variable is really a varible
use const to create a variable that is really not changed


Tuturiol-3
==============================
Arrow functions

const funname = () => {
// code.
}
	
no more issues with this keyword.
Notes: 
 ()-> is optional only when we have only one arg
 (arg1,arg2)-handling with multiple paramaters
 shorthand function line. 
 






13/04/2019

session-1
=============================================================================================================================================================
Tuturiol-1
==============================
Reactjs is a library
Highly reactive
superfast javascript driven web applications
javasccript runs in the browser 

Tuturiol-2
==============================
Getting started with react
 what?
    js library for building user interfaces 
    javascript driven apps
 why?
   they run on the browser
   we dont want to wait for server response
 How?
   user interfaces
         ->user what they see
         ->uses components (header, siderbar,bottom,article)
         ->component are blocks that contains piece of code.
         -> custom html element 
  maintanable
  managable
  resuable

Tuturiol-3
==============================
Its about component explaning with reactjs site and udemy site..


Tuturiol -4
==============================
code pen  work:
w
we have to use two external js:
  1. react.min.js
  2. react.dom.min.js

babel concepts
jsx concepts

props concepts
   it can be used to get the dynamic content as a argument.

ReactDom exposes the object. 
reactDom has render method, which can render the javascript function as component to the real DOM
In render method we can render a js function as a html element

In react class will be named as className
In react we use single open close curly braces to print the dyanmic value in the variable.

Tuturiol -5 why
==============================

why react

ui state becomes difficult to handle with vanilla javascript
focus on business , not on preventing the app exploding and also using this with frameworks will gives us a better code.

huge ecosystem, bigger community,high performance.

Tuturiol -6 
==============================
react alternatives.

angular , react, vuejs are all highly scalable but not jquery

Tuturiol -7
==============================
Two kinds of applications

Single page application.
  content is rendered in one HTML page,  content is rendered on client.
  everything is managed with javascript react
  Every component will be react component
  only one reactDOM.render method 
  only one root component

multipage application.
  multiple pages ,content is rendered on server.
  entire page is not in react control.
  reactDOM.render method will be called per widget.

Tuturiol -8
==============================
course outline

1. Getting Started
2. Basics
3. Debugging
4. styling components
5. component deep dive
6. Http request
7. Routing
8. Forms and validation
9. redux
10. authentication
11. Testing introduction
12. deployment
13. Bonus(Animations, webpacks)

Tuturiol -9
==============================
get the most out of this course

Tuturiol-10
===============================
 https://reactjs.org/
 https://codepen.io/anon/pen/MELQaQ


