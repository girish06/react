Reactjs

19/04/2019
===============
session-2
Tuturiol-6:
==============================
class methods and properties

properties are like variables
methods are like functions attached to the classs or object

ES6
->Properties in constructor function (like using this keyword) 

ES7
-> We can directly declare the variables in class
-> directly use arrow functions


Tuturiol-7:
==============================

spread and rest operators:

  ... three dots .

 we call it spread and rest operators depends where we use it.

spread operators:
  use to split up the array elements and object properties.
  syntax: 
     const newArr = [...oldArr,4,5];
     const newObj = {...oldObj, newob:5}

rest operators:
  used to merge the list of function argument into an array
 
syntax: // this is used to sort the array values
   function sortArgs(...args) {
      return args.sort()
   }


Tuturiol-8:
==============================

Destructuring:     	
 
Easily to extract the array elements or object properties and store them in variables.. somthing like spread operator does but not .

array destructuring 
 [a,b] = ['girish', '27']
 console.log(b); // output as 27
object destructuring
 {name} = {name:'girish', age:'27}
 console.log(name); // output girish
 console.log(age); // output as undefined



Tuturiol-9:
==============================
Reference and primitives type:

Primitives type:

Number,string, boolean are all types of primitives

Reference type:

Objects and arrays are type of reference 

objects are stored in memory,we store a pointer in the place memory
if we update the value for the object. it will update the pointer variable in the memory.

so avoid this kind of conflicts , we have to use spread operator for copying the object or arrays.


Tuturiol-10
=============================
Refreshing the array functions



Tuturial-10
=============================
overview result of the course







17/04/2019
================


session-2
========================================================================================
Tuturiol-4:
==============================
Exports and imports(modules)

javasccript code is splitted up in mulitple files
to import them in correct order in html file

main idea of these concetps to import the content of other js file.

Export js:
    by default key word
    by const

   export can hold function 
   export can hold variables


import:
   its in two different types.
   one for default type
   one for constant type

Tuturiol-5:
===============================

class concepts:

classes are nothing but blueprint for javascript objects

it has class keyword
it has properties and method.


access the properties of class as normal as oops concepts.
inheritance concepts.
super() method

constructor method: to initiate the class.







 



15/04/2019
================

session-2
========================================================================================
Tuturiol-1
==============================
Next Gen javascripts
 example like arrows, lets, constants etc
 Es6 concepts
 clean and robust app using advanced js concepts

Tuturiol-2
==============================
In js we normally create a variable with keyword var
 
Henceforth, in ES6 Concepts we use those varibles say  let and const

use let to create a variable is really a varible
use const to create a variable that is really not changed


Tuturiol-3
==============================
Arrow functions

const funname = () => {
// code.
}
	
no more issues with this keyword.
Notes: 
 ()-> is optional only when we have only one arg
 (arg1,arg2)-handling with multiple paramaters
 shorthand function line. 
 






13/04/2019

session-1
========================================================================================
Tuturiol-1
==============================
Reactjs is a library
Highly reactive
superfast javascript driven web applications
javasccript runs in the browser 

Tuturiol-2
==============================
Getting started with react
 what?
    js library for building user interfaces 
    javascript driven apps
 why?
   they run on the browser
   we dont want to wait for server response
 How?
   user interfaces
         ->user what they see
         ->uses components (header, siderbar,bottom,article)
         ->component are blocks that contains piece of code.
         -> custom html element 
  maintanable
  managable
  resuable

Tuturiol-3
==============================
Its about component explaning with reactjs site and udemy site..


Tuturiol -4
==============================
code pen  work:
w
we have to use two external js:
  1. react.min.js
  2. react.dom.min.js

babel concepts
jsx concepts

props concepts
   it can be used to get the dynamic content as a argument.

ReactDom exposes the object. 
reactDom has render method, which can render the javascript function as component to the real DOM
In render method we can render a js function as a html element

In react class will be named as className
In react we use single open close curly braces to print the dyanmic value in the variable.

Tuturiol -5 why
==============================

why react

ui state becomes difficult to handle with vanilla javascript
focus on business , not on preventing the app exploding and also using this with frameworks will gives us a better code.

huge ecosystem, bigger community,high performance.

Tuturiol -6 
==============================
react alternatives.

angular , react, vuejs are all highly scalable but not jquery

Tuturiol -7
==============================
Two kinds of applications

Single page application.
  content is rendered in one HTML page,  content is rendered on client.
  everything is managed with javascript react
  Every component will be react component
  only one reactDOM.render method 
  only one root component

multipage application.
  multiple pages ,content is rendered on server.
  entire page is not in react control.
  reactDOM.render method will be called per widget.

Tuturiol -8
==============================
course outline

1. Getting Started
2. Basics
3. Debugging
4. styling components
5. component deep dive
6. Http request
7. Routing
8. Forms and validation
9. redux
10. authentication
11. Testing introduction
12. deployment
13. Bonus(Animations, webpacks)

Tuturiol -9
==============================
get the most out of this course

Tuturiol-10
===============================
 https://reactjs.org/
 https://codepen.io/anon/pen/MELQaQ


